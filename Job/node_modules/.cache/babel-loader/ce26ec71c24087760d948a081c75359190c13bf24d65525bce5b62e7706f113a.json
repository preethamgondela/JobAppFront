{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hub\\\\Job\\\\src\\\\Components\\\\MyPostings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPostings = () => {\n  _s();\n  const [postings, setPostings] = useState([]);\n\n  // Fetch the employer's job postings from the backend\n  useEffect(() => {\n    fetch('http://localhost:8080/api/postings').then(response => response.json()).then(data => setPostings(data)).catch(error => console.error('Error fetching postings:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Postings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: postings.length > 0 ? postings.map(posting => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: posting.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: posting.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 18\n          }, this), \" \", posting.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, posting.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No job postings found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPostings, \"EyX7+Tb3D2awHZzR96+kX4LfeUw=\");\n_c = MyPostings;\nexport default MyPostings;\nvar _c;\n$RefreshReg$(_c, \"MyPostings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyPostings","_s","postings","setPostings","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","posting","title","description","location","id","_c","$RefreshReg$"],"sources":["E:/Hub/Job/src/Components/MyPostings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MyPostings = () => {\r\n  const [postings, setPostings] = useState([]);\r\n\r\n  // Fetch the employer's job postings from the backend\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/postings')\r\n      .then((response) => response.json())\r\n      .then((data) => setPostings(data))\r\n      .catch((error) => console.error('Error fetching postings:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Postings</h2>\r\n      <ul>\r\n        {postings.length > 0 ? (\r\n          postings.map((posting) => (\r\n            <li key={posting.id}>\r\n              <h3>{posting.title}</h3>\r\n              <p>{posting.description}</p>\r\n              <p><strong>Location:</strong> {posting.location}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No job postings found.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPostings;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjB,OAAA;MAAAa,QAAA,EACGV,QAAQ,CAACe,MAAM,GAAG,CAAC,GAClBf,QAAQ,CAACgB,GAAG,CAAEC,OAAO,iBACnBpB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKO,OAAO,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBjB,OAAA;UAAAa,QAAA,EAAIO,OAAO,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BjB,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,OAAO,CAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH7CG,OAAO,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL,CAAC,gBAEFjB,OAAA;QAAAa,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}